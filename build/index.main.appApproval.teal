#pragma version 8
// resource: R_Txn
txn ApplicationID
bz alloc
byte base64()
app_global_get
dup
int 0
extract_uint64
store 1 // GV_currentStep :: UInt
int 8
extract_uint64
store 2 // GV_currentTime :: UInt
byte base64(AA==)
app_global_get
preamble:
pushbytess base64(DEaPgA==) base64(aboFog==) base64(bQ3LEA==)
txna ApplicationArgs 0
match _reachp_1 _reachp_2 _reachp_0
errl:
err
_reachi_0:
txn Sender
store 16 // Anna/86
load 11 // v158
int 0
extract_uint64
store 12 // v157
load 11 // v158
extract 8 32
store 15 // commitAnna/87
byte base64(lF1hFg==)
load 12 // v157
itob
concat
load 15 // commitAnna/87
concat
load 11 // v158
extract 40 8
concat
log // up to 52 bytes
// ^ log: "_reach_e0" [v157,commitAnna/87,guessAnna/88] "_reach_e0(uint64,digest,uint64)"
load 12 // v157
callsub l2_LF_timeCheck
l3_LF_svsDump_1:
load 16 // Anna/86
load 15 // commitAnna/87
concat
int 1
global Round
updateStateNoOp:
store 2 // GV_currentTime :: UInt
store 1 // GV_currentStep :: UInt
byte base64(AA==)
swap
extract 0 64
app_global_put
byte base64()
load 1 // GV_currentStep :: UInt
itob
load 2 // GV_currentTime :: UInt
itob
concat
app_global_put
txn OnCompletion
int NoOp
==
assert
// checked on completion
callsub l7_LF_updateMbr
updateState:
load 3 // GV_wasntMeth :: Bool
bnz done
apiReturn_noCheck:
byte base64(FR98dQ==)
load 4 // GV_apiRet :: Null
concat
log // up to 4 bytes
done:
int 1
return
_reachi_1:
int 1
load 1 // GV_currentStep :: UInt
==
assert
l4_LF_svsLoad_1:
dup
extract 0 32
store 16 // Anna/86
extract 32 32
store 15 // commitAnna/87
load 11 // v161
int 0
extract_uint64
store 12 // v160
byte base64(zfmklA==)
load 12 // v160
itob
concat
load 11 // v161
extract 8 8
concat
load 11 // v161
extract 16 8
concat
log // up to 28 bytes
// ^ log: "_reach_e1" [v160,handJack/96,guessJack/97] "_reach_e1(uint64,uint64,uint64)"
load 12 // v160
callsub l2_LF_timeCheck
l5_LF_svsDump_2:
load 16 // Anna/86
load 15 // commitAnna/87
concat
int 2
global Round
b updateStateNoOp
_reachi_2:
int 2
load 1 // GV_currentStep :: UInt
==
assert
l6_LF_svsLoad_2:
dup
extract 0 32
store 16 // Anna/86
extract 32 32
store 15 // commitAnna/87
load 11 // v164
int 0
extract_uint64
store 12 // v163
load 11 // v164
int 8
extract_uint64
store 14 // saltAnna/103
load 11 // v164
int 16
extract_uint64
store 13 // handAnna/104
byte base64(q7rfSQ==)
load 12 // v163
itob
concat
load 14 // saltAnna/103
itob
concat
load 13 // handAnna/104
itob
concat
log // up to 28 bytes
// ^ log: "_reach_e2" [v163,saltAnna/103,handAnna/104] "_reach_e2(uint64,uint64,uint64)"
load 12 // v163
callsub l2_LF_timeCheck
load 16 // Anna/86
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:75:10:dot
load 15 // commitAnna/87
load 14 // saltAnna/103
itob
load 13 // handAnna/104
itob
concat
sha256
==
assert
// ^ Claim
// at reach standard library:69:17:application
// at ./index.rsh:76:20:application call to "checkCommitment" (defined at: reach standard library:68:8:function exp)
updateStateHalt:
txn OnCompletion
int DeleteApplication
==
assert
// checked on completion
callsub l7_LF_updateMbr
// resource: R_Account
int 0
global CurrentApplicationAddress
global CreatorAddress
callsub l8_LF_makeTxn_False_True_False_True
b updateState
_reachp_0:
callsub l0_LF_wasntMeth
int 100000
l1_LF_mbrAdd:
load 6 // GV_mbrAdd :: UInt
+
store 6 // GV_mbrAdd :: UInt
txna ApplicationArgs 1
store 11 // v158
b _reachi_0
_reachp_1:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v161
b _reachi_1
_reachp_2:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v164
b _reachi_2
alloc:
int 0
txn GlobalNumUint
==
assert
int 2
txn GlobalNumByteSlice
==
assert
int 0
txn LocalNumUint
==
assert
int 0
txn LocalNumByteSlice
==
assert
callsub l0_LF_wasntMeth
int 64
bzero
int 0
int 0
b updateStateNoOp
apiReturn_check:
txn OnCompletion
int NoOp
==
assert
// checked on completion
b apiReturn_noCheck
l9_LF_makeTxnK_False_True:
int 0
itxn_field Fee
int pay
itxn_field TypeEnum
itxn_field Receiver
itxn_field Amount
itxn_submit
retsub
updateMbr_eq:
pop
retsub
updateMbr_neg:
swap
-
dup
store 6 // GV_mbrAdd :: UInt
global CreatorAddress
callsub l11_LF_makeTxn_False_False_False_True
retsub
updateMbr_pos_eq:
-
dup
bz updateMbr_eq
dup
store 6 // GV_mbrAdd :: UInt
l10_LF_checkTxn_False:
// resource: R_Txn
txn GroupIndex
load 0 // GV_txnCounter :: UInt
int 1
+
dup
store 0 // GV_txnCounter :: UInt
-
dupn 2
gtxns Receiver
global CurrentApplicationAddress
==
assert
gtxns TypeEnum
int pay
==
assert
gtxns Amount
==
assert
retsub
l0_LF_wasntMeth:
int 1
store 3 // GV_wasntMeth :: Bool
retsub
l2_LF_timeCheck:
dup
int 0
==
swap
load 2 // GV_currentTime :: UInt
==
||
assert
retsub
l7_LF_updateMbr:
load 6 // GV_mbrAdd :: UInt
load 7 // GV_mbrSub :: UInt
dup2
>=
bz updateMbr_neg
b updateMbr_pos_eq
l8_LF_makeTxn_False_True_False_True:
itxn_begin
itxn_field CloseRemainderTo
b l9_LF_makeTxnK_False_True
l11_LF_makeTxn_False_False_False_True:
itxn_begin
b l9_LF_makeTxnK_False_True
